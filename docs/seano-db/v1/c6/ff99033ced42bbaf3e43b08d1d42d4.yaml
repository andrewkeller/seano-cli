---
risk: low

employee-short-loc-hlist-md:
  en-US:
  - Add new `seano` view for use in GitHub PR summaries

employee-technical-loc-md:
  en-US: |
    A new `seano` view has been created that is designed to be used within a
    GitHub Pull Request description.  This view can be generated by `seano format`
    via the format named `gh_pr_description`.

    This new view is designed to allow developers to auto-generate entire pull
    request descriptions based on data already saved in `seano`.  In simple
    cases, the generated text is nothing more than what you just wrote, making
    this view not much more than a glorified preview.  In more complex cases,
    such as when upgrading dependencies, the generated text may come from
    several `seano` notes, written by many authors, and describing knowledge that
    has been long-since forgotten.

    At the time of this writing, this view has not yet been though any
    substantial testing.  Thus, it is likely that changes may be required in the
    future to polish some rough edges.  In particular, visual hierarchy when
    more than one note is present is of particular risk.

    Unlike in literally every other preexisting `seano` view at the time of this
    writing, *selection of notes to display in this new view is __completely
    manual__*.  This is because this view is designed to display only those
    notes added in the pull request, which almost never lines up with release
    boundaries â€” but we don't want `seano` to know anything about GitHub.  To
    resolve this contradiction, this new view takes an explicit list of `seano`
    note IDs enumerating notes that should be displayed.  If you're using
    `seano format` to invoke this new view, then the parameter you're interested
    in is `--restrict-note-ids`, which is also new in this change.  To easily
    get the list of note IDs, you can use `seano list`, which is also new in this
    change.

    Due to architecture limitations in `seano format`, the new
    `--restrict-note-ids` parameter is available in all views, but is only
    functional in the new Pull Request description view.  In all other views,
    use of the new parameter results in a warning being printed to `stderr`.

    To upload a generated pull request description to the pull request itself,
    consult the docs for your peer review software.  If you happen to be using
    GitHub for both peer review and also CI, here's a fully functioning example
    that generates a pull request description and uploads it to the current PR:

    ```yaml
    - name: Compile `seano` preview for the PR summary
      id: seano-preview-compiler
      run: |
        . .virtualenv/bin/activate
        mkdir -p build/docs
        zarf/tools/seano/seano query --out build/docs/seano-db-export.json
        notes=$(zarf/tools/seano/seano list --exclude-ghosts origin/$GITHUB_BASE_REF..HEAD || true)
        echo 'text<<b5d18aa02177238b45a56127f40305f809f8819f' >> $GITHUB_OUTPUT
        zarf/tools/seano/seano format \
            --src build/docs/seano-db-export.json \
            --format gh_pr_description \
            --restrict-note-ids "$notes" \
            --out - >> $GITHUB_OUTPUT
        echo b5d18aa02177238b45a56127f40305f809f8819f >> $GITHUB_OUTPUT

    - name: Update PR summary with current docs
      uses: ivangabriele/find-and-replace-pull-request-body@042438c6cbfbacf6a4701d6042f59b1f73db2fd8
      with:
        githubToken: ${{ secrets.GITHUB_TOKEN }}
        find: 'SEANO_PREVIEW'
        isHtmlCommentTag: true
        replace: ${{ steps.seano-preview-compiler.outputs.text || '_no `seano` docs in this pull request_' }}
    ```

    Specific implementation details of note in the above example:

    1.  Using a manually-invoked custom `seano` query here, mainly for speed.
        Unlike in a "normal" build of docs, we don't care about the product
        version *(not used in the view)*, and we don't care if submodules have
        been properly synced *(PR description is more important than a passing
        build)*, so there's no value in running `waf configure` here and
        subsequently having Zarf run its special query that injects custom
        metadata such as the product version.

    1.  Using `seano list` to get a list of `seano` note IDs representing notes
        that are new in this PR.  Note the use of the `$GITHUB_BASE_REF`
        environment variable, making `seano` oblivious to the fact that we're
        using GitHub for both peer review and CI.  Also, note that we swallow
        errors: a lack of a `seano` note should not cause the PR description to
        break.

    1.  The generated text contains newlines, so we must use GitHub's Bourne
        Shell-inspired multi-line output variable declaration syntax.  The big
        fat hex string is just a random number that, in theory, will never
        appear anywhere else.  It's being used as a delimiter to specify the end
        of the `seano` preview.

    1.  Using `seano format` to generate the pull request description text *(as
        opposed to, for example, importing and invoking the function in
        Python, which you could do)*.

    1.  Using a third party GitHub action to upload the description text.  In
        theory, the less custom code we have to write ourselves, the better.
        This particular action lets us perform a fenced replacement: in this
        example, we're stuffing the generated description in between two
        `<!-- SEANO_PREVIEW -->` tags, which conveniently allows us to manually
        write text before or after the generated docs in the PR description.

qa-technical-loc-md:
  en-US: |
    This change is not used in production, and is not mission-critical.  If
    there are bugs, we can fix them on an as-needed basis.
